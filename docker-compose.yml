version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

  elasticsearch:
    image: elasticsearch:8.10.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  logstash:
    image: logstash:8.10.2
    container_name: logstash
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./osquery/logs/:/var/osquery/logs/
    ports:
      - "5044:5044"
      - "5514:5514"
      - "5514:5514/udp"
    environment:
      - xpack.monitoring.enabled=false
    depends_on:
      - elasticsearch
      - kafka

  kibana:
    image: kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  ml-service:
    build: ./ml-service
    container_name: ml-service
    environment:
      - KAFKA_BOOTSTRAP=kafka:29092
      - KAFKA_TOPIC=syslog_logs
      - KAFKA_GROUP_ID=ml-service-syslog
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OUTPUT_INDEX=syslog-alerts
      - DRAIN_INDEX=syslog-templates
      - DRAIN_STATE_PATH=/app/state/drain_state.bin
    depends_on:
      - kafka
      - elasticsearch
    restart: unless-stopped
    volumes:
      - ./ml-service/state:/app/state

  ml-service-osquery:
    build: ./ml-service
    container_name: ml-service-osquery
    environment:
      - KAFKA_BOOTSTRAP=kafka:29092
      - KAFKA_TOPIC=osquery_logs
      - KAFKA_GROUP_ID=ml-service-osquery
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OUTPUT_INDEX=osquery-alerts
      - DRAIN_INDEX=osquery-templates
      - DRAIN_STATE_PATH=/app/state/drain_state_osq.bin
    depends_on:
      - kafka
      - elasticsearch
    restart: unless-stopped
    volumes:
      - ./ml-service/state-osq:/app/state

  ai-analyst:
    build: ./ai_analyst
    container_name: ai-analyst
    environment:
      - KAFKA_BOOTSTRAP=kafka:29092
      - KAFKA_TOPIC=syslog-alerts
      - KAFKA_GROUP_ID=ai-analyst
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OUTPUT_INDEX=alerts-enriched
      # Optional LLM settings; set OPENAI_API_KEY to enable real summaries
      - OPENAI_BASE_URL=https://api.openai.com/v1
      - OPENAI_MODEL=gpt-4o-mini
      # OPENAI_API_KEY=your_api_key_here
    depends_on:
      - kafka
      - elasticsearch
    restart: unless-stopped
    ports:
      - "8080:8080"

volumes:
  elastic_data:
  